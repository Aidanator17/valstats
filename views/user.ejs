<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= UserInfo['username'] %>
    </title>
    <link rel="stylesheet" href="/css/user.css">
</head>

<body>
    <div class="container">
        <div id="usergrid">
            <div class="usergrid-item">
                <% if (UserInfo && UserInfo['img'] && UserInfo['username']) { %>
                    <div class="profile">
                        <img id="playerimg" src="<%= UserInfo['img'] %>" alt="Player Image">
                        <h1 id="playername">
                            <%= UserInfo['username'] %>
                                <span id="playertag">
                                    <%= UserInfo['tag'] %>
                                </span>
                        </h1>
                    </div>
                    <% } else { %>
                        <p>Error: UserInfo data is missing or incomplete.</p>
                        <% } %>
            </div>
            <div class="usergrid-item rank-grid">
                <p>Current:</p>
                <p>Peak</p>
                <img id="rankimg" src="/images/ranks/<%= UserInfo['current_rank'] %>.png" alt="Player Image">
                <img id="rankimg" src="/images/ranks/<%= UserInfo['peak_rank']['rank'] %>.png" alt="Player Image">
                <p></p>
                <p>
                    <%= UserInfo['peak_rank']['season'] %>
                </p>
            </div>
        </div>
        <div class="stats">
            <h3>Stats (All Comp Matches)</h3>
            <div class="statgrid">
                <div class="statgrid-item">
                    <p class="statgrid-element">
                        Headshot: <%= UserInfo['stats']['overall']['HSP'] %>%
                    </p>
                    <p class="statgrid-element">
                        K/D: <%= UserInfo['stats']['overall']['KD'] %>
                    </p>
                    <p class="statgrid-element">
                        Win: <%= UserInfo['stats']['overall']['wp'] %>%
                    </p>
                </div>
            </div>
        </div>
        <div class="stats">
            <h3>Stats (Past 5 Comp Matches)</h3>
            <div class="statgrid">
                <div class="statgrid-item">
                    <p class="statgrid-element">
                        Headshot: <%= UserInfo['stats']['past5']['HSP'] %>%
                    </p>
                    <p class="statgrid-element">
                        K/D: <%= UserInfo['stats']['past5']['KD'] %>
                    </p>
                    <p class="statgrid-element">
                        Win: <%= UserInfo['stats']['past5']['wp'] %>%
                    </p>
                </div>
            </div>

        </div>
        <div class="buttons">
            <button onclick="openMatches()" class="tab active" id="matches-btn">Match List</button>
            <button onclick="openAM()" class="tab" id="am-btn">Agents / Maps</button>
            <button onclick="" class="tab" id="x-btn">Button 3</button>
        </div>
        <div style="" id="matches" class="matches">
            <h3>Matches (<%= UserInfo['matches'].length %>)</h3>
            <div class="matchgrid">
                <div class="matchgrid-item">
                    <p class="matchgrid-element matchgrid-title">
                        Date
                    </p>
                    <p class="matchgrid-element matchgrid-title">
                        Map
                    </p>
                    <p class="matchgrid-element matchgrid-title">
                        Gamemode
                    </p>
                    <p class="matchgrid-element matchgrid-title">
                        Agent
                    </p>
                    <p class="matchgrid-element matchgrid-title">
                        K/D/A (K/D)
                    </p>
                    <p class="matchgrid-element matchgrid-title">
                        HS%
                    </p>
                    <p class="matchgrid-element matchgrid-title">
                        Match Score
                    </p>
                    <p class="matchgrid-element matchgrid-title">

                    </p>
                </div>
                <% for (match in UserInfo['matches']) { %>
                    <div class="matchgrid-item">
                        <p class="matchgrid-element matchgrid-date">
                            <%= UserInfo['matches'][match]['data']['metadata']['game_start'] %>
                        </p>
                        <p class="matchgrid-element">
                            <%= UserInfo['matches'][match]['data']['metadata']['map'] %>
                        </p>
                        <p class="matchgrid-element">
                            <%= UserInfo['matches'][match]['data']['metadata']['mode'] %>
                        </p>
                        <p class="matchgrid-element">
                            <%= UserInfo['matches'][match]['data']['metadata']['agent'] %>
                        </p>
                        <p class="matchgrid-element">
                            <%= UserInfo['matches'][match]['data']['metadata']['kills'] %>/<%=
                                    UserInfo['matches'][match]['data']['metadata']['deaths'] %>/<%=
                                        UserInfo['matches'][match]['data']['metadata']['assists'] %> (<%=
                                            UserInfo['matches'][match]['data']['metadata']['kd'] %>)
                        </p>
                        <p class="matchgrid-element">
                            <%= UserInfo['matches'][match]['data']['metadata']['HSP'] %>
                        </p>
                        <p class="matchgrid-element">
                            <%= UserInfo['matches'][match]['data']['metadata']['result'] %>
                                <%= UserInfo['matches'][match]['data']['metadata']['score'] %>
                        </p>
                        <form class="matchgrid-element"
                            action="/user/<%= UserInfo['username'] %>/<%= UserInfo['tag'] %>/<%= UserInfo['matches'][match]['data']['metadata']['matchid'] %>"
                            method="get">
                            <button type="submit" class="view-button">view</button>
                        </form>
                    </div>
                    <% } %>
            </div>
        </div>
        <div style="display: none;" id="agents-maps" class="agents-maps">
            <p class="agents-maps-item blank-item" data-row="0" data-col="0"></p>
            <% let maps=Object.keys(UserInfo['maps_played']); for (m in maps){ %>
                <p class="grid-item-title agents-maps-item" data-row="0" data-col="<%= parseInt(m)+1 %>">
                    <%= maps[m] %>
                </p>
                <% } for (a in UserInfo['agents']){ %>
                    <p class="grid-item-title agents-maps-item" data-row="<%= parseInt(a)+1 %>" data-col="0">
                        <%= UserInfo['agents'][a].agent %>
                    </p>
                    <% for (m in UserInfo['agents'][a].maps){ let fw if (UserInfo['agents'][a].maps[m]>0){
                        %>
                        <div style='font-weight: bold;' class="agents-maps-item" data-row="<%= parseInt(a)+1 %>"
                            data-col="<%= maps.indexOf(m)+1 %>">
                            <%= UserInfo['agents'][a].maps[m]+"/"+UserInfo['maps_played'][m] %><br>
                                <% if (UserInfo['maps_played'][m]==0){ %>
                                    N/A
                                    <% }else{ %>
                                        <%= Math.round((UserInfo['agents'][a].maps[m]/UserInfo['maps_played'][m])*1000)/10
                                            %>%<% } %>
                        </div>

                        <% }else{ %>
                            <div class="agents-maps-item" data-row="<%= parseInt(a)+1 %>"
                                data-col="<%= maps.indexOf(m)+1 %>">
                                <%= UserInfo['agents'][a].maps[m]+"/"+UserInfo['maps_played'][m] %><br>
                                    <% if (UserInfo['maps_played'][m]==0){ %>
                                        N/A
                                        <% }else{ %>
                                            <%= Math.round((UserInfo['agents'][a].maps[m]/UserInfo['maps_played'][m])*1000)/10
                                                %>%<% } %>
                            </div>
                            <% }%>

                                <% } %>
                                    <% } %>
        </div>
    </div>
    <div class="side-containers">
        <div class="side-container">
            <h3>Common Teammates:</h3>
            <div id="teammate-grid">
                <% for (tm in UserInfo.teammates){ %>
                    <p class="teammate-grid-item">
                        <%= UserInfo.teammates[tm].username %>#<%= UserInfo.teammates[tm].tag %>
                    </p>
                    <p class="teammate-grid-item">
                        <%= UserInfo.teammates[tm].count %>
                    </p>
                    <% } %>
            </div>
        </div>
        <div class="side-container">
            <h3>Most Played Agents:</h3>
            <div id="agent-grid">
                <p class="agent-grid-item grid-item-title">Agent</p>
                <p class="agent-grid-item grid-item-title">Count</p>
                <p class="agent-grid-item grid-item-title">Win%</p>
                <p class="agent-grid-item grid-item-title">KD</p>
                <% for (a in UserInfo.agents){ if (a < 5){ %>
                    <p class="agent-grid-item">
                        <%= UserInfo.agents[a].agent %>
                    </p>
                    <p class="agent-grid-item">
                        <%= UserInfo.agents[a].count %>
                    </p>
                    <p class="agent-grid-item">
                        <%= Math.round((UserInfo.agents[a].wins/(UserInfo.agents[a].wins+UserInfo.agents[a].losses+UserInfo.agents[a].draws))*10000)/100
                            %>%
                    </p>
                    <p class="agent-grid-item">
                        <%= Math.round((UserInfo.agents[a].kills/UserInfo.agents[a].deaths)*100)/100 %>
                    </p>
                    <% }} %>
            </div>
        </div>
    </div>
    <script>
        document.querySelectorAll('.agents-maps-item').forEach(item => {
            item.addEventListener('mouseover', (event) => {
                const row = event.target.dataset.row;
                const col = event.target.dataset.col;
                document.querySelectorAll(`.agents-maps-item[data-row='${row}']`).forEach(el => el.classList.add('highlight-row'));
                document.querySelectorAll(`.agents-maps-item[data-col='${col}']`).forEach(el => el.classList.add('highlight-col'));
            });

            item.addEventListener('mouseout', (event) => {
                const row = event.target.dataset.row;
                const col = event.target.dataset.col;
                document.querySelectorAll(`.agents-maps-item[data-row='${row}']`).forEach(el => el.classList.remove('highlight-row'));
                document.querySelectorAll(`.agents-maps-item[data-col='${col}']`).forEach(el => el.classList.remove('highlight-col'));
            });
        });

        function openMatches() {
            let amButton = document.getElementById('am-btn')
            let am = document.getElementById('agents-maps')
            let xButton = document.getElementById('x-btn')
            let x = undefined
            let matchesButton = document.getElementById('matches-btn')
            let matches = document.getElementById('matches')
            // console.log("am:",am.style.display+"\nmatches:",matches.style.display)
            if (!am.style.display != 'none') {
                am.style.display = 'none'
                amButton.classList.remove('active')
                matches.style.display = ''
                matchesButton.classList.add('active')
            }
            else if (!x.style.display != 'none') {
                x.style.display = 'none'
                xButton.classList.remove('active')
                matches.style.display = ''
                matchesButton.classList.add('active')
            }
        }
        function openAM() {
            let amButton = document.getElementById('am-btn')
            let am = document.getElementById('agents-maps')
            let xButton = document.getElementById('x-btn')
            let x = undefined
            let matchesButton = document.getElementById('matches-btn')
            let matches = document.getElementById('matches')
            if (matches.style.display != 'none') {
                matches.style.display = 'none'
                matchesButton.classList.remove('active')
                am.style.display = ''
                amButton.classList.add('active')
            }
            else if (!x.style.display != 'none') {
                x.style.display = 'none'
                xButton.classList.remove('active')
                am.style.display = ''
                amButton.classList.add('active')
            }
        }
        function openX() { }
        function getTime(rawTime) {
            // Given epoch time in GMT (milliseconds since January 1, 1970)
            const epochTime = parseInt(rawTime) * 1000; // Example epoch time in milliseconds

            // Convert the epoch time to a Date object
            const date = new Date(epochTime);

            // Specify the time zone you want to convert to (e.g., America/Vancouver)
            const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;

            // Use Intl.DateTimeFormat to format the date in the specified time zone
            const options = {
                timeZone,
                year: 'numeric',
                month: '2-digit',
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit',
                // second: '2-digit'
                hour12: false
            };

            const formatter = new Intl.DateTimeFormat('en-US', options);
            const formattedDate = formatter.format(date);
            // console.log(rawTime, formattedDate)

            return formattedDate // Output: formatted date and time in the specified time zone

        }

        function updateTimeElements() {
            const timeElements = document.querySelectorAll('.matchgrid-date');
            timeElements.forEach((element) => {
                element.innerHTML = getTime(element.innerHTML);
            });
        }
        window.onload = updateTimeElements;
    </script>
</body>